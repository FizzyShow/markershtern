*Авторизация 
**Взаимодействие с бэкенд, с БД
БД 
{
	Логин
	Пароль/хеш с солью
	токен - Временный набор данных. [{
		Дата создания
		Строка токена. 
	}]

	Id - индентификатор пользователя
}
Индексы по токену, дате создания. ID пользователя. 

Логин используется для авторизации со стороны пользователя. 
Пароль его данные подтверждающие что он тот, за кого выдает себя. 
Мы хешируем пароль, и солим его, допусим с частью самого пароля. И храним это в бд. В виде хеша. 
Проверка пароля происходит по сверки хешей. 
Токен составной тип данных, мы будем хранить массив обьектов. 
Обьект состоит из даты создания. И уникального токена. Допустим из нескольких гуидов. 
Дата используется для того чтобы мы контролировали время жизни токена. Выдается условно на сутки. при прдтверждении авторизации. 
Id индентификатор пользователя, который будет использоваться в остальных частях программ, чтобы узнавать конкретного пользователя. 

Предполагаемое взаимодействие. 

В сервис авторизации, идет первичное обращение, с логином, и паролем. 
Подтвержается что такой человек существует в базе. 
На подтверждение создается токен, с текущем временем создания. И временем существования сутки. 
Input первичная авторизация{
	Login
	Password
}

Input Подтверждение подлинности{
	Токен
}

OutPut {
	Код ответа : ok/no/Истекло время
	с ok{
		Токен,
		Id,
		Время окончания авторизации
	}
}

Какой то первичный микросервис обращается в авторизацию за первичной авторизацией. Подтверждая корректность выполнения соедующих операций. 
Первичный микросервис передает остальным микросервисам, токен, и ID пользователя. Для работы. 
Токен используется как гарантия корректных операций. 

Предполагается что микросервисы будут находиться вне локальной сети, где любой человек может сделать обращение на сервер. Токен будет гарантировать что операции согласованны.
Токен предотвращает проблему, что сторонний человек, от системы, сделает не коректный запрос, в другие микросервисы, например на перевод баланса по счету. 

Как предполагается что другие микросервисы должны работать с системой авторизации. 
Первый микросервис, получает логин и пароль. Подтверждает что существует такой человек. 
Получает ID пользователя. Получает токен. 
Передает данные на другие микросервисы, допустим на микросервис склада. 
Мы имеем ID пользователя. По ID пользователя регулируем данные которые доступны именно этому пользователю. 
Обращаемся в сервис авторизации, подтверждаем токен, что он существует и не истек. 
Если все верно. Значит можно выдать права на доступ по права ID пользователя. 
И выполнять операции от его имени. 

Передача и подтвержение токена, и его верменная генерация. защищает нас от сети интернет. 