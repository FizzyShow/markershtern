## Context: 
Миксервис контролирующий целостность транзакций. 

## Decision

Основной алгоритм транзакции описан в диаграмме.
Краткая суть. 
В микросервис транзакции приходит событие, провести определенный тип транзакции, по таким то полям. 
Микросервис формирует 
GlobalDataTransaction{
	Id
	TypeTransaction
	IsCompleted
	IsError
	CreateData
}
и дочерние обьекты 
ConcreateDataTransaction{
	IdGlobalTransaction
	TargetServis
	IsComplited
	IsError
	CreateData
	Details of the operation in progress {Данные}
}

GlobalDataTransaction используется как всеобщая метка о транзакции, используется во всех микросервисах.
На примере микросервиса счета.
Приходит сообщение о необходимости выполнения транзакции между двумя счетами. 
Проводим мипросервис счета(Баланс) проводит транзакцию внутри себя между двумя счетами.
Помечаем счет А и счет B, меткой GlobalDataTransaction.Id
Она означает, что обьект А, в процессе транзакции с таким то Id.
Уведомляем микросервис транзакции, что операция проведена успешно. 
Переодически опрашиваем микросервис транзакции, о состоянии транзакции с меткой GlobalDataTransaction.Id, и дожидаемся ответа. 
В какой то момент времени, ответ будет получен. 
Если ответ что GlobalDataTransaction.Id зафиксирована. То освобождаем обьект А и обьект B от метки транзакций. 
Оепрация зафиксированна. 

Структуру события и форму сообщений, имеет смысл формировать после оценки всего списка возможных событий, и с кем нужно будет общаться. 
Тоже самое и gRPC. 

## Status

Предложено